/*--------------------------FOR DESKTOP----------------------------*/


*{  /*applied to all the elements , so our page comes with default settings like we have a line marked under our text etc. so we don't want this so we do everything 0*/
    margin: 0;
    padding: 0;
    border: 0;
    outline: 0;
    text-decoration: none; /*removing lines under text*/
    list-style: none; /*removing the bullets*/
    box-sizing: border-box;/*so what happens is when we set box-sizing: border-box; then if we change our margin and padding then it will not effect our width and height otherwise if we dont apply this then we we do some change in margin and padding then our width,height will also change. So this property includes padding , border in an element's total width and height. */
}

:root {/*when we make our own variables then we want it to use anywhere so to use anywhere we apply :roor property so that any custom variable made inside becomes global. So what happens is if we want to change let say color of some buttons so what we do we just change the color here and wherever we have used the variable name there automatically color will be changed*/
    /*let us make our custom varibales , for example: -- is used to make custom variable, color-primary is the varibale name */
    --color-primary: #3285eb;
    --color-success: #00bf8e;
    --color-warning: #f7c94b;
    --color-danger: #2b2b82;
    --color-danger-variant: rgba(247,88,66,0.4);
    --color-white: #fff;
    --color-light: rgba(255,255,255,0.7);
    --color-black: #000;
    --color-bg: #3b5a86;
    --color-bg1: #40517c;
    --color-bg2: #425f90;

    --container-width-lg: 80%;  /*we set conatiner width for large devices*/
    --container-width-md: 90%;  /*for tablets*/
    --container-width-sm: 94%;  /*for small screens*/

    --transition: all 400ms ease; /*defining our custom transition property so here (all) means transition will be applied to all so whatever property we write anything like width,background color anything so here (all) includes all of them , then we have (ease) which is a transition property , all these transitions will be done in 400ms.*/
}

body{ /*element selector*/
    font-family: 'Montserrat', sans-serif;/*so we have taken font Montserrat from google fonts so we have linked them in html file*/
    line-height: 1.7;
    color: var(--color-white);/*so we have defined our custom varibale --color-white in root so we can use that variable anywhere using (var) keyword*/
    background: var(--color-bg);
}

.container{ /*grabbing container element*/
    width: var(--container-width-lg);
    margin: 0 auto; /*so that content comes in middle so the top bottom margin is 0 and left right margin is auto, so we do auto so that browser sets the margin auto based on the container to make the container centered */
}

section{
    padding: 6rem 0; /*6 rem is 6*16 px*/
}

section h2{ /*grabbing the h2 element*/
    text-align: center;
    margin-bottom: 4rem;
}

h1,h2,h3,h4,h5{
    line-height: 1.2;
}

h1{
    font-size: 2.4rem;
}
h2{
    font-size: 2rem;
}
h3{
    font-size: 4.6rem;
}
h4{
    font-size: 1.3rem;
}

a{
    color: var(--color-white); 
}

img{
    width: 100%;/*every image will have a width of 1005 its parent width*/
    display: block;
    object-fit: cover; /*it i used to tell how an image or video resize to fits its container , the image will be clipped to fot the container*/
}

.btn{
    display:inline-block; /*it allows to set width and height of the element and does not adds a line break like display:block so here all elements are inline*/
    background: var(--color-white);
    color: var(--color-black);
    padding: 1rem 2rem;
    border: 1px solid transparent;
    font-weight: 500; /*it tells how thick or thin means how bold or light the text should appear*/
    transform: var(--transition);
}

.btn:hover{ /*grabbing button having class btn , so here when we hoven on button*/
    background: transparent;
    color: var(--color-white);
    border-color: var(--color-white);
}

.btn-primary{ /*grabbing button having class btn-primary*/
    background: var(--color-danger);
    color: var(--color-white);
}

.btns{
    display:inline-block; /*it allows to set width and height of the element and does not adds a line break like display:block so here all elements are inline*/
    background: var(--color-white);
    color: var(--color-black);
    padding: 2px 5px;
    margin-top: 10px;
    border-radius: 10px; /*to give some curve*/
    border: 1px solid transparent;
    font-weight: 500; /*it tells how thick or thin means how bold or light the text should appear*/
    transform: var(--transition);
}

.btns:hover{ /*grabbing button having class btns , so here when we hover on button*/
    background: transparent;
    color: var(--color-white);
    border-color: var(--color-white);
}


/*--------------------------------Navbar---------------------------*/
nav{
    background: transparent;
    width: 100vw; /*so we guve 100 viewport width so it will acquire the whole width no matter small screens or big screens it will take the whole width*/
    height: 5rem; /* height of 5*16px  */
    position: fixed; /*we do position fixed so that even if we scroll then also the navbar will remain stick*/
    top: 0; /*so we give from top:0 */
    z-index: 11; /*if you want to use z-index then position should be relative or absolute or fixed or sticky , so sometimes some elements comes over another element so the element having having higher value of z-index will come over another element having low z-index value.*/
}

.window-scroll{ /*grabbing the class which we added in js file so when we scroll then this class is called and all the properties in this class are applied*/
    background: var(--color-primary);
    box-shadow: 0 1rem 2rem rgba(0,0,0,0.2);/*box-shadow(offset-x,offset-y,blur-radius,color)*/

}

.nav__container{ /*grabbbing element having class nav__container*/
    height: 100%; /*we give height 100% of the parent*/
    display: flex; /*used for laying our items in rows and columns so that each element comes inside the container so we make container as flex*/
    justify-content: space-between; /*so if we want to have equal space between all the elements inside container then we apply this property*/
    align-items: center; /*so all the elements will come in y direction or from top bottom equal space will be there and elements will be at center*/
}

nav input{ /*so on desktop or large devices we don't want menu,cross button*/
    display: none; /*so we do its display none*/
}

.nav__menu{
    display: flex; /*so we do display flex for all the elements inside class nav__menu*/
    align-items: center;/*so all the elements will come in y direction or from top bottom equal space will be there and elements will be at center*/
    gap: 4rem; /*it will give the gap rows and columns means between the elements*/
}

.nav__menu a{ /*all elements inside navbar inside a tag will be of this size*/
    font-size: 0.9rem;
    transition: var(--transition); /*so that when we hover this property should be applied , so by applying this when we hover then the hover property will not reflect immediately but the transition will take whole 400ms so it will look more appealing*/
}

.nav__menu a:hover{ /*it will change color when we hover*/
    color: var(--color-white);
    box-shadow: 1px 1px 1.8px rgb(255, 255, 255);
}


/*------------------------HEADER----------------------------*/
header{
    position: relative; /*so it means relative to its previous position*/
    top: 5rem;
    overflow: hidden;/*overflow property tells what to do if the content overflows the element's box, so we made it hidden means the overflow will be clipped at the ending */
    height: 70vh;
    margin-bottom: 5rem;
}

.header__container{/*so we use grid to create layout of the header container*/
    display: grid;
    grid-template-columns: 1fr 1fr;/*so it is one of the property of grid so here it will divide the screen in two equal halves.*/
    align-items: center;
    gap: 5rem;
    height: 70vh;
}

.header__left p{
    margin: 1rem 0 2.4rem; /*setting margin from the top as 1rem , 0 from left and right and 2.4rem from the bottom*/
}


/*----------------------Categories----------------------------*/
.categories{
    background: var(--color-bg1);
    height: 80rem;
}

.categories h1{
    line-height: 1;
    margin-bottom: 3rem;
}

.categories__container{
    display: grid;
    grid-template-columns: 40% 60%; /*divides the container in two halves where left half is 40% and right half id 60%*/
}

.categories__left{
    margin-right: 4rem;
}

.categories__left p{
    margin: 1rem 0 3rem; /*margin of 1rem from the top , o from the left and right and 3 rem from the right*/
}

.categories__right{
    display: grid;
    grid-template-columns: repeat(3,1fr);  /* by this property 3 columns will be created where each item has width of 1rem*/
    gap: 1.2rem;
}

.category{ /*grabbing indivisual element having class category*/
    background-color: var(--color-bg2);
    padding: 2rem;
    border-radius: 2rem;
    transition: var(--transition);
}

.category:hover{
    box-shadow: 0 3rem 3rem rgba(0,0,0,0.3); /*box-shadow(offset-x,offset-y,blur-radius,color)*/
    z-index: 1;
}

.category h5{
    margin: 2rem 0 1rem;
}

.category p{
    font-size: 0.85rem;
}


/*---------------------------------MILESTONES------------------------------*/
.milestones img{
    height: 22rem;
    width: fit-content;
}

.milestones__container{
    display: grid;
    grid-template-columns: repeat(2,1fr);
    gap: 2rem;
}

.milestone{
    background: var(--color-bg1);
    text-align: center;
    border: 1px solid transparent;
    transition: var(--transition);
}

.milestone:hover{
    background: transparent;
    border-color: var(--color-primary);
}
.milestone__info{
    padding: 2rem;
}

.milestone__info p{
    margin: 1.2rem 0 2rem;
    font-size: 0.9rem;
}


/*----------------------TESTIMONIALS --------------------------*/
.testimonials__container{ /*grabbing the element*/
    overflow-x: hidden; /*if the content overflows outside the box then it will be clipped*/
    position: relative;
    margin-bottom: 5rem;
}

.testimonial{
    padding-top: 2rem;
}

.avatar{
    width: 6rem;
    height: 6rem;
    border-radius: 50%;
    overflow: hidden;
    margin: 0 auto 1rem; /*giving margin 0 from the top , suto from the left and right , 1rem from the bottom*/
    border: 1rem solid var(--color-bg1);
}

.testimonial__info{
    text-align: center; /*so it will align the text in center horizontally*/
}

.testimonial__body{
    background: var(--color-primary);
    padding: 2rem;
    margin-top: 3rem;
    position: relative;
}

.testimonial__body::before{/*used to insert something before the content of an element , we are making a triangle type gradient effect here which is attached to each  avatar in the page*/
    content: ""; /*setting content as empty*/
    display: block;
    background: linear-gradient(135deg,transparent,var(--color-primary),var(--color-primary)); /*to give the gradient effect we have syntax linear-gradient(angle , type , color-stop1, color-stop2)*/
    width: 3rem;
    height: 3rem;
    position: absolute;
    left: 50%;
    top: -1.5rem;
    transform: rotate(45deg);/*rotate the element by 45 degrees*/
}


/* -------------------------------------FOOTER--------------------------------------  */
footer{ /*grabbing element footer*/
    background: var(--color-bg1);
    padding-top: 5rem;
    font-size: 0.9rem;
}

.footer__container{
    display: grid;
    grid-template-columns: repeat(4,1fr); /*to make four columns*/
    gap: 5rem;
}

.footer__container > div h4{ /*it selects only that that element which are direct children of a parent */
    margin-bottom: 1.2rem;
}

.footer__1 p{
    margin: 0 0 2rem;
}

footer ul li{
    margin-bottom: 0.7rem;
}

footer ul li :hover{
    text-decoration: underline;
}

.footer__socials{
    display: flex;
    gap: 1rem;
    font-size: 1.2rem;
    margin-top: 2rem;
}

.footer__copyright{
    text-align: center;
    margin-top: 4rem;
    padding: 1.2rem 0;
    border-top: 1px solid var(--color-bg2);
}

/*-----------------------------------------------------------------*/



/* ---------------------FOR TABLETS----------------------- */





@media screen and (max-width:1024px){ /*any screen below 1024 px*/
    .container{ /*we have common container class in all of our sections*/
        width: var(--container-width-md); /*width to be 90 %*/
    }
    h1{
        font-size: 2.2rem;
    }

    h2{
        font-size: 1.7rem;
    }

    h3{
        font-size: 1.4rem;
    }

    h4{
        font-size: 1.2rem;
    }


    /*-----------------------NAVBAR---------------------------*/

    nav input{ /*for menu and close button*/
        display: inline-block;
        /* background: transparent; */
        font-size: 1.8rem;
        /* color: var(--color-white); */
        cursor: pointer;
    }

    nav input#close-menu-btn{
        display: none; /*initially we dont want to see the close button we only want to see the hamburger or the menu button so we do it as none*/
    }

    .nav__menu{
        position: fixed;
        top: 5rem;
        right: 5%; /*container is 90% so margin on left is 5% and margin on right is also 5%*/
        height: fit-content; /*it adjusts the size*/
        width: 18rem;
        flex-direction: column; /*it is already flex in desktop version so here we can give it flex-direction so it will bring the content in column*/
        gap: 0;
        display: none; /*so initially we will not see the content but when we will click on the menu or the hamburger then we will see the content so for that we have to write javascriot*/
    }

    .nav__menu li{
        width: 100%;
        height: 5.8rem;
    }

    .nav__menu li a{
        background-color: var(--color-primary);
        box-shadow: -4rem 6rem 10rem rgba(0,0,0,0.6);
        width: 100%;
        height: 100%;
        display: grid;
        place-items: center; /*so it will bring the elements inside anchor tag in the middle in x direction and in y direction*/
    }

    .nav__menu li a:hover{
        background: var(--color-bg2);
        color: var(--color-white);
        box-shadow: none;
    }


    /* -------------------------HEADER ---------------------------- */

    header{
        height: 52vh;
        margin-bottom: 4rem;
    }

    header p{
        display: none;
    }

    .header__container{
        gap: 2rem;
        padding-bottom: 10rem;
    }

    header a{
        margin-top: 1rem;
    }




    /* --------------------------CATEGORIES--------------------------*/

    .categories{
        height:fit-content
    }

    .categories__container{
        grid-template-columns: 1fr;
        gap: 3rem;
    }

    .categories__left{
        margin-right: 0;
    }


    /* ---------------------------MILESTONES------------------------ */

    .milestones{ /*for desktop we gave some margin not for tablet we set it to 0*/
        margin-top: 0;
    }

    .milestones__container{
        grid-template-columns: 1fr;
    }

    .milestones img{
        display: none;
    }
    

    /* --------------------------TESTIMONIALS-----------------------*/

    .testimonials__container{
        padding-top: 0;
    }


    /*---------------------------- FOOTER-------------------------- */

    .footer__container{
        grid-template-columns: 1fr 1fr; /*in two eual halves*/
    }
}



/*------------------------------------------------------------------*/




/*-------------------------FOR MOBILE PHONE------------------------*/
@media screen and (max-width:600px){ /*for all the screens from 0 to 600px*/
    .container{ /*we have common container class in all of our sections*/
        width: var(--container-width-sm); /*for small devices*/
    }


    /*---------------------------NAVBAR----------------------------*/

    .nav_menu{
        right: 3%; /*we do it because by default we have set --container-width-sm as 94% so it leaves us with 6% so we say from right 3% and it means we are left with 3% that becomes from left*/
    }


    /*---------------------------HEADER----------------------------*/

    header{
        height: 100vh;
        margin-bottom: 0rem;
    }

    .header__container{
        grid-template-columns: 1fr;
        text-align: center;
        margin-top: 0rem;
    }

    .header__left p{
        margin-bottom: 1.3rem;
    }

    .header__container img{
        margin-top: 4rem;
    }


    /*---------------------------CATEGORIES--------------------------*/

    .categories__right{
        grid-template-columns: 1fr 1fr;
        gap: 0.7rem;
    }

    .category{
        padding: 1rem;
        border-radius: 1rem;
    }


    /*-------------------------MILESTONES---------------------------*/
    

    /*---------------------------TESTIMONIALS---------------------- */

    .testimonial__body{
        padding: 4.2rem;
    }


    /*-------------------------- FOOTER ----------------------------*/

    .footer__container{
        grid-template-columns: 1fr;
        text-align: center;
        gap: 2rem;
    }

    .footer__1 p{
        margin: 1rem auto;
    }

    .footer__socials{
        justify-content: center; /*it brings the content in the center horizontally*/
    }
}